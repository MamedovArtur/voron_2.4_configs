[gcode_macro sl_red]
gcode:
    SET_LED LED=hotend_rgb RED=0.05 GREEN=0 BLUE=0 WHITE=0 INDEX=1 TRANSMIT=1 SYNC=0
 
[gcode_macro sl_blue]
gcode:
    SET_LED LED=hotend_rgb RED=0 GREEN=0 BLUE=0.05 WHITE=0 INDEX=1 TRANSMIT=1 SYNC=0

[gcode_macro sl_green]
gcode:
    SET_LED LED=hotend_rgb RED=0 GREEN=0.5 BLUE=0.0 WHITE=0 INDEX=1 TRANSMIT=1 SYNC=0

[gcode_macro sl_yellow]
gcode:
    SET_LED LED=hotend_rgb RED=0.05 GREEN=0.05 BLUE=0 WHITE=0 INDEX=1 TRANSMIT=1 SYNC=0

[gcode_macro sl_white]
gcode:
    SET_LED LED=hotend_rgb RED=0.1 GREEN=0.1 BLUE=0.1 WHITE=0 INDEX=1 TRANSMIT=1 SYNC=0

[gcode_macro ex_light_on]
gcode:
    SET_LED LED=hotend_rgb RED=0.5 GREEN=0.5 BLUE=0.5 WHITE=0 INDEX=2 TRANSMIT=1 SYNC=0
    SET_LED LED=hotend_rgb RED=0.5 GREEN=0.5 BLUE=0.5 WHITE=0 INDEX=3 TRANSMIT=1 SYNC=0
[gcode_macro ex_light_off]
gcode:
    SET_LED LED=hotend_rgb RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=2 TRANSMIT=1 SYNC=0
    SET_LED LED=hotend_rgb RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=3 TRANSMIT=1 SYNC=0
   

 
[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    # Z_TILT_ADJUST
    QUAD_GANTRY_LEVEL
    G28 Z
# resonance tester
[gcode_macro RESONANCE_FULL_TEST]
gcode:
    RUN_SHELL_COMMAND CMD=clean_resonance
    TEST_RESONANCES AXIS=X
    TEST_RESONANCES AXIS=Y
    RUN_SHELL_COMMAND CMD=exposrt_resonance

# [gcode_shell_command exposrt_resonance]
# command: sh /home/blv/scripts/export_resonance.sh
# timeout: 100
# verbose: True

# [gcode_shell_command clean_resonance]
# command: sh /home/blv/scripts/clean_resonance.sh
# timeout: 100
# verbose: True

#print operation
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
   sl_red
   TURN_OFF_HEATERS
   G28 X Y
   CANCEL_PRINT_BASE
   EX_LIGHT_OFF
  
[gcode_macro PRINT_END]
gcode:
    sl_green
    TURN_OFF_HEATERS
    G28 X Y
    EX_LIGHT_OFF

[gcode_macro PRINT_START]
gcode: 
    EX_LIGHT_ON
    sl_yellow
    {% set BED_TEMP = params.BED|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|float %}
    # Парковка и калибровка
    G32 ; Выполнение автокалибровки стола
    sl_white
    # Прогрев стола и частичный нагрев экструдера
    M140 S{BED_TEMP+10} ; Установка температуры стола+10
    M104 S{EXTRUDER_TEMP/2} ; Прогрев экструдера до 50% температуры
    G1 Z2
    M190 S100 ; Установка температуры стола +10
    WAIT_EDDY TARGET=48
    M190 S{BED_TEMP} ; Ожидание нагрева стола
    M109 R{EXTRUDER_TEMP/2} ; Ожидание достижения 50% температуры экструдера
    sl_red
    # Парковка и калибровка
    G28 Z 
    BED_MESH_CALIBRATE METHOD=rapid_scan ; Калибровка стола методом Rapid Scan
    #BED_MESH_CALIBRATE
    # Полный нагрев экструдера
    G1 X200 Y0 Z20 F1000 ; Перемещение в точку (0, 300, 20) для ожидания полного нагрева
    M104 S{EXTRUDER_TEMP} ; Полный нагрев экструдера
    M109 S{EXTRUDER_TEMP} ; Ожидание нагрева экструдера до полной температуры
    #SET_GCODE_OFFSET Z=0.2
     # Очистка сопла с добавлением линии
    G92 E0 ; Сброс экструзии
    # Добавление линии от точки (300, 0) до точки (0, 5)
    G1 X160 Y0 Z0.2 F5000 ; Перемещение к точке (300, 0)
    G1 X0 Y1 E10 F1000 ; Экструзия линии к точке (0, 5)
    G1 Y0
    G1 X170 Y0 E10 F3000 
    sl_blue
    # Начало печати
    G92 E0 ; Сброс экструзии
    G1 Z0.2 F3000 ; Установка начальной высоты

[gcode_macro WAIT_EDDY]
gcode:
    {% set target = params.TARGET|default(45)|float %}
    {% for i in range(300) %}
      WAIT_EDDY_INTERNAL TARGET={target}
   {%endfor%}
    M118 OK
[gcode_macro WAIT_EDDY_INTERNAL]
gcode:
    {% set target = params.TARGET|float %}
    {% if printer["temperature_probe btt_eddy"].temperature < target %}
      M118 "Eddy wait {target} current { printer["temperature_probe btt_eddy"].temperature }"
      G4 P2000
    {% endif %}
# gcode:
#   {% if params.Z_ADJUST %}
#     SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
#   {% endif %}